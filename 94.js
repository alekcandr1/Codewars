// // Реализация универсального фильтра в массиве
// // Напиши дженериковую функцию filterArray, которая принимает массив элементов любого типа и функцию-предикат(predicate) ✳️, а возвращает новый массив, состоящий только из элементов, которые удовлетворяют условию предиката.
// //
// // ✳️ Функция-предикат - это функция, которая в результате своего выполнения возвращает булево значение
// //
// // Требования
// // Функция должна быть дженериковой и работать с массивами любого типа.
// //     Функция-предикат принимает элемент массива и возвращает boolean.
// //     Если ни один элемент массива не удовлетворяет условию, функция должна возвращать пустой массив.
// //
// //
//
// const isEven = (num: number) => num % 2 === 0
//
// const filterArray = <T,>(arr: T[], pridicate: (item: T)=>boolean): T[] => {
//     return arr.filter(el=> pridicate(el))
// }
//
//
// // 2. Задача (2 дженерика)
// // Универсальная функция преобразования элементов массива
// // Напиши дженериковую функцию mapArray, которая принимает массив элементов любого типа и функцию-преобразователь (transform), применяет ее к каждому элементу массива и возвращает новый массив с результатами преобразований.
//
// // Пример 1: Преобразование чисел в строки
// const numbers = [1, 2, 3, 4]
// const transformNumberToString = (num: number) => `Number: ${num}`
//
// const result = mapArray(numbers, transformNumberToString)
//
// const mapArray = <T,U>(array: T[], transform: (item: T)=>U): U[] => {
//     return arr.map(transform)
// }